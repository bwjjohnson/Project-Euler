#!/usr/bin/env python3
# Project Euler - Problem 23 - http://projecteuler.net
import itertools

def proper_divisor(n):
    '''Returns proper divisors of n as a set.'''
    div = {i for i in range(2, int(n**.5+1)) if n % i == 0}
    div.update({n//i for i in div}, {1})
    return div

def abundance_check(n):
    '''Returns boolean of n being an abundant number.'''
    if sum(proper_divisor(n)) > n:
        return True
    else:
        return False

# Find all the abundant numbers in the range 12 through 28123
abundants = {n for n in range(12, 28124) if abundance_check(n)}

# Pair all the combinations of abundant numbers
pairs = itertools.combinations_with_replacement(abundants, 2)

# Sum the pairs
sumpairs = {sum(p) for p in pairs}

# Take the difference of known sums of two abundant numbers
# from the range of candidates.
answer = {n for n in range(1, 28124)}.difference(sumpairs)

print(sum(answer))
