#Progject Euler - Problem 12 
#Zedwarth
#The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#    
#    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#    
#    Let us list the factors of the first seven triangle numbers:
#        
#         1: 1
#          3: 1,3
#           6: 1,2,3,6
#           10: 1,2,5,10
#           15: 1,3,5,15
#           21: 1,3,7,21
#           28: 1,2,4,7,14,28
#           We can see that 28 is the first triangle number to have over five divisors.
#           
#           What is the value of the first triangle number to have over five hundred divisors?#
def factor (x):
    c = 0 #The count of the number of factors
    for y in range (2, int((x/2))): 
        if x % y == 0:
            c+=1
    return ((c*2)+2)

div, n = 0, 0 # div is the number of divisors for the current triangle number, which is n 
while div <=500:
    n += 1 #add 1 to the last triangle number
    a = sum (range (n+1)) 
    div = factor(a)
   # print ("n = ",n ," div = ",div)
print (n)
