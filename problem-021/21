#!/usr/bin/python
#Project Euler - Problem 21 Amicable numbers - projecteuler.net/problem=21

def divisors(n):  #find all the whole divisors of n; less n
    div = []
    for x in range(1,int(n**.5+1)): #check modulus from 1-âˆšn
        if n % x == 0:
            div.append(x)  #save the first half of divisors in 'div'
    for y in div[:]: #loop over a copy of div
        div.append(int(n/y)) #finds the corresponding upper-half
    div.remove(n)
    return set(div)

amicable = []
for x in range(1, 10001):
    sumpair = sum(divisors(x))
# It's actually more efficiant to add all the amicable pairs together twice
#and then half the answer.
#    if x in amicable:  #check if x was arleady found so answer isn't doubled
#        continue #? 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0  GAME OVER! [INSERT COIN]
    if sumpair != x and sum(divisors(sumpair)) == x: 
        amicable.append(x)
        amicable.append(sumpair)
print(sum(amicable)//2)
